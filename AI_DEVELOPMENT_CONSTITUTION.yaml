# ====================================================================
# AI DEVELOPMENT CONSTITUTION v5.1 - UNIFIED FRAMEWORK
# Machine-Readable Framework for Commercial AI Development
# ====================================================================

meta:
  version: "5.1"
  format: "unified_commercial_framework"
  encoding: "utf-8"
  update_date: "2025-08-16"
  purpose: "Comprehensive AI development guidelines for commercial applications"
  changelog: "Enhanced progressive quality automation, constraint resolution patterns, documentation integration"

# ====================================================================
# CORE PRINCIPLES - FOUNDATION LAYER
# ====================================================================

core_principles:
  english_only_discipline:
    principle: "All code, comments, and variables must use English"
    rationale: "Ensures international compatibility and consistency"
    auto_enforce: true
    
  file_size_limits:
    principle: "Maximum 500 lines per file, split at 400 lines"
    rationale: "Maintains readability and single responsibility"
    thresholds:
      warning: 400
      critical: 500
    auto_enforce: true
    
  single_responsibility:
    principle: "Each component has one clear, well-defined purpose"
    rationale: "Improves maintainability and testability"
    auto_enforce: true
    
  progressive_quality:
    principle: "Staged quality improvement toward production readiness"
    stages:
      emergency: "Functional > 60%, others > 30%"
      systematic: "All dimensions > 70%"
      production: "All dimensions > 90%"
    automated_quality_gates:
      emergency_to_systematic:
        file_size_compliance: ">80%"
        basic_functionality: "manual_verification_passed"
        dependency_resolution: "no_circular_dependencies"
      systematic_to_production:
        file_size_compliance: "100%"
        performance_benchmarks: "defined_thresholds_met"
        documentation_completeness: ">90%"
    measurement_framework:
      tools: ["automated_line_counting", "dependency_analysis", "performance_profiling"]
      reporting: "quality_progression_dashboard"
    auto_enforce: true

# ====================================================================
# QUALITY FRAMEWORK
# ====================================================================

quality_dimensions:
  functional: "Feature requirements fulfillment"
  structural: "Architecture and design quality"
  maintainable: "Code readability and extensibility"
  reliable: "Error handling and stability"

development_stages:
  stage_1_emergency:
    time_limit: "immediate to 2 hours"
    focus: "Core functionality working"
    allowed_shortcuts:
      - "minimal_testing"
      - "defer_documentation"
      - "temporary_implementations"
    mandatory_actions:
      - "mark_technical_debt"
      - "schedule_improvement"
      
  stage_2_systematic:
    time_limit: "2 hours to 1 day"
    focus: "Architecture compliance and testing"
    required_actions:
      - "comprehensive_testing"
      - "architecture_alignment"
      - "code_quality_review"
      
  stage_3_production:
    time_limit: "1 day to 1 week"
    focus: "Performance optimization and polish"
    mandatory_compliance:
      - "full_constitutional_adherence"
      - "comprehensive_documentation"
      - "performance_optimization"

# ====================================================================
# IMPLEMENTATION GUIDANCE
# ====================================================================

methodology_selection:
  context_assessment:
    urgency:
      critical: "Core functionality broken, user-blocking"
      important: "Feature degradation, workflow impact"
      normal: "Enhancement, optimization, refactoring"
    complexity:
      low: "Single component, clear cause-effect"
      medium: "Multiple components, some interdependencies"
      high: "System-wide impact, complex interdependencies"
      
  approach_matrix:
    rapid_iteration:
      conditions: "high_urgency + low_complexity"
      approach: "Quick fixes, minimal documentation"
    systematic_approach:
      conditions: "low_urgency + high_complexity"
      approach: "Thorough analysis, comprehensive design"
    hybrid_approach:
      conditions: "medium_urgency OR medium_complexity"
      approach: "Staged implementation with progressive quality"

# ====================================================================
# CONSTRAINT MANAGEMENT
# ====================================================================

constraint_adaptation:
  identification_strategies:
    environmental: "Tool limitations, platform restrictions"
    temporal: "Deadline pressures, time constraints"
    resource: "Memory, computational, network limitations"
    knowledge: "Information gaps, domain expertise needs"
    
  resolution_approaches:
    bypass: "Find alternative approaches avoiding constraint"
    mitigation: "Reduce constraint impact through optimization"
    transformation: "Convert constraints into advantages"
    acceptance: "Work within constraint boundaries effectively"

constraint_resolution_patterns:
  file_size_constraints:
    extraction_strategies:
      - "utility_function_modules"
      - "configuration_externalization"
      - "event_driven_decomposition"
    decision_framework:
      coupling_vs_cohesion: "minimize_coupling_while_maintaining_logical_cohesion"
      performance_vs_maintainability: "favor_maintainability_unless_critical_path"
      
  dependency_management:
    patterns:
      - "dependency_injection_via_global_namespace"
      - "event_bus_for_loose_coupling"
      - "initialization_sequence_validation"
    resolution_strategies:
      circular_dependencies: "break_cycles_with_event_driven_architecture"
      tight_coupling: "introduce_abstraction_layers"
      initialization_order: "implement_dependency_validation"

# ====================================================================
# COLLABORATION FRAMEWORK
# ====================================================================

human_ai_collaboration:
  ai_strengths:
    - "Pattern recognition and systematic execution"
    - "Consistent application of standards"
    - "Rapid iteration and testing"
    
  human_strengths:
    - "Strategic thinking and domain expertise"
    - "Quality judgment and user experience"
    - "Complex decision making under uncertainty"
    
  collaboration_triggers:
    strategic_decisions: "Architecture paradigm changes"
    domain_expertise: "Specialized knowledge requirements"
    quality_assessment: "User experience and design decisions"
    risk_evaluation: "High-impact decisions under uncertainty"

# ====================================================================
# HANDOFF PROTOCOLS
# ====================================================================

project_handoff:
  essential_context:
    - "current_development_stage"
    - "applied_methodology_and_rationale"
    - "active_constraints_and_adaptations"
    - "quality_convergence_progress"
    
  technical_state:
    - "architecture_decisions_and_tradeoffs"
    - "implementation_status_by_component"
    - "identified_technical_debt"
    - "performance_and_quality_metrics"
    
  continuation_guidance:
    - "immediate_priority_tasks"
    - "recommended_methodology_for_next_phase"
    - "quality_targets_for_current_stage"
    - "collaboration_recommendations"

# ====================================================================
# DOCUMENTATION LIFECYCLE MANAGEMENT
# ====================================================================

documentation_framework:
  single_source_architecture:
    entry_point: "README.md as authoritative document registry"
    organization: "docs/ for active, archive/ for historical"
    validation: "Automated cross-reference integrity checking"
    
  universal_document_roles:
    entry_point: "Project overview and navigation"
    development_guide: "Complete developer onboarding"
    architecture_reference: "System design and components"
    
  constitutional_documentation_requirements:
    mandatory_sections:
      - "constitutional_compliance_status"
      - "quality_stage_progression_log"
      - "constraint_resolution_decisions"
      - "performance_optimization_results"
    automated_generation:
      compliance_dashboard: "real_time_constitutional_metrics"
      dependency_visualization: "module_interaction_graphs"
      quality_timeline: "stage_progression_history"
    
  lifecycle_management:
    creation_triggers: "Stakeholder confusion, onboarding delays"
    update_protocols: "Minor edits vs major restructuring"
    deprecation_procedures: "Clear supersession with grace periods"
    
  quality_metrics:
    navigation_efficiency: "< 60 seconds to primary documentation"
    reference_integrity: "> 95% cross-reference accuracy"
    onboarding_effectiveness: "< 30 minutes to productive work"
    constitutional_compliance: "> 95% framework adherence"

# ====================================================================
# ACTIVATION PROTOCOL
# ====================================================================

constitution_activation:
  initialization:
    step_1: "Read and internalize constitutional principles"
    step_2: "Assess project context and select methodology"
    step_3: "Apply constitutional framework to development tasks"
    
  continuous_application:
    before_coding: "Review applicable principles"
    during_development: "Monitor quality and constraints"
    after_completion: "Validate constitutional compliance"
    
  success_indicators:
    immediate: "Principle awareness demonstrated"
    short_term: "Quality improvements measurable"
    long_term: "Consistent constitutional adherence"

# ====================================================================
# END OF CONSTITUTION v5.1
# ====================================================================